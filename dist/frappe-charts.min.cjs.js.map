{"version":3,"file":"frappe-charts.min.cjs.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/js/utils/dom.js","../src/js/utils/constants.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/draw.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/utils/export.js","../src/js/utils/date-utils.js","../src/js/objects/ChartComponents.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/css/chartsCss.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/utils/i18n.js","../src/js/charts/PercentageChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js","../src/js/charts/DonutChart.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n\n// https://css-tricks.com/snippets/javascript/loop-queryselectorall-matches/\nexport function forEachNode(nodeList, callback, scope) {\n\tif(!nodeList) return;\n\tfor (var i = 0; i < nodeList.length; i++) {\n\t\tcallback.call(scope, nodeList[i], i);\n\t}\n}\n\nexport function activate($parent, $child, commonClass, activeClass='active', index = -1) {\n\tlet $children = $parent.querySelectorAll(`.${commonClass}.${activeClass}`);\n\n\tforEachNode($children, (node, i) => {\n\t\tif(index >= 0 && i <= index) return;\n\t\tnode.classList.remove(activeClass);\n\t});\n\n\t$child.classList.add(activeClass);\n}\n","export const ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nexport const COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\nexport const DATA_COLOR_DIVISIONS = {\n\tbar: 'datasets',\n\tline: 'datasets',\n\tpie: 'labels',\n\tpercentage: 'labels',\n\theatmap: HEATMAP_DISTRIBUTION_SIZE\n};\n\nexport const BASE_MEASURES = {\n\tmargins: {\n\t\ttop: 10,\n\t\tbottom: 10,\n\t\tleft: 20,\n\t\tright: 20\n\t},\n\tpaddings: {\n\t\ttop: 20,\n\t\tbottom: 40,\n\t\tleft: 30,\n\t\tright: 10\n\t},\n\n\tbaseHeight: 240,\n\ttitleHeight: 20,\n\tlegendHeight: 30,\n\n\ttitleFontSize: 12,\n};\n\nexport function getTopOffset(m) {\n\treturn m.titleHeight + m.margins.top + m.paddings.top;\n}\n\nexport function getLeftOffset(m) {\n\treturn m.margins.left + m.paddings.left;\n}\n\nexport function getExtraHeight(m) {\n\tlet totalExtraHeight = m.margins.top + m.margins.bottom\n\t\t+ m.paddings.top + m.paddings.bottom\n\t\t+ m.titleHeight + m.legendHeight;\n\treturn totalExtraHeight;\n}\n\nexport function getExtraWidth(m) {\n\tlet totalExtraWidth = m.margins.left + m.margins.right\n\t\t+ m.paddings.left + m.paddings.right;\n\n\treturn totalExtraWidth;\n}\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const AXIS_LEGEND_BAR_SIZE = 100;\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.00;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const PERCENTAGE_BAR_DEFAULT_HEIGHT = 20;\nexport const PERCENTAGE_BAR_DEFAULT_DEPTH = 2;\n\n// Fixed 5-color theme,\n// More colors are difficult to parse visually\nexport const HEATMAP_DISTRIBUTION_SIZE = 5;\n\nexport const HEATMAP_SQUARE_SIZE = 10;\nexport const HEATMAP_GUTTER_SIZE = 2;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\nexport const TOOLTIP_POINTER_TRIANGLE_HEIGHT = 5;\n\nconst DEFAULT_CHART_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\nconst HEATMAP_COLORS_GREEN = ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\nexport const HEATMAP_COLORS_BLUE = ['#ebedf0', '#c0ddf9', '#73b3f3', '#3886e1', '#17459e'];\nexport const HEATMAP_COLORS_YELLOW = ['#ebedf0', '#fdf436', '#ffc700', '#ff9100', '#06001c'];\n\nexport const DEFAULT_COLORS = {\n\tbar: DEFAULT_CHART_COLORS,\n\tline: DEFAULT_CHART_COLORS,\n\tpie: DEFAULT_CHART_COLORS,\n\tpercentage: DEFAULT_CHART_COLORS,\n\theatmap: HEATMAP_COLORS_GREEN,\n\tdonut: DEFAULT_CHART_COLORS\n};\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\n// https://stackoverflow.com/a/29325222\nexport function getRandomBias(min, max, bias, influence) {\n\tconst range = max - min;\n\tconst biasValue = range * bias + min;\n\tvar rnd = Math.random() * range + min,\t\t// random in range\n\t\tmix = Math.random() * influence;\t\t// random mixer\n\treturn rnd * (1 - mix) + biasValue * mix;\t// mix full range and bias\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx: Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty: Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n\nexport function truncateString(txt, len) {\n\tif (!txt) {\n\t\treturn;\n\t}\n\tif (txt.length > len) {\n\t\treturn txt.slice(0, len-3) + '...';\n\t} else {\n\t\treturn txt;\n\t}\n}\n\nexport function shortenLargeNumber(label) {\n\tlet number;\n\tif (typeof label === 'number') number = label;\n\telse if (typeof label === 'string') {\n\t\tnumber = Number(label);\n\t\tif (Number.isNaN(number)) return label;\n\t}\n\n\t// Using absolute since log wont work for negative numbers\n\tlet p = Math.floor(Math.log10(Math.abs(number)));\n\tif (p <= 2) return number; // Return as is for a 3 digit number of less\n\tlet\tl = Math.floor(p / 3);\n\tlet shortened = (Math.pow(10, p - l * 3) * +(number / Math.pow(10, p)).toFixed(1));\n\n\t// Correct for floating point error upto 2 decimal places\n\treturn Math.round(shortened*100)/100 + ' ' + ['', 'K', 'M', 'B', 'T'][l];\n}\n\n// cubic bezier curve calculation (from example by François Romain)\nexport function getSplineCurvePointsStr(xList, yList) {\n\n\tlet points=[];\n\tfor(let i=0;i<xList.length;i++){\n\t\tpoints.push([xList[i], yList[i]]);\n\t}\n\n\tlet smoothing = 0.2;\n\tlet line = (pointA, pointB) => {\n\t\tlet lengthX = pointB[0] - pointA[0];\n\t\tlet lengthY = pointB[1] - pointA[1];\n\t\treturn {\n\t\t\tlength: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n\t\t\tangle: Math.atan2(lengthY, lengthX)\n\t\t};\n\t};\n    \n\tlet controlPoint = (current, previous, next, reverse) => {\n\t\tlet p = previous || current;\n\t\tlet n = next || current;\n\t\tlet o = line(p, n);\n\t\tlet angle = o.angle + (reverse ? Math.PI : 0);\n\t\tlet length = o.length * smoothing;\n\t\tlet x = current[0] + Math.cos(angle) * length;\n\t\tlet y = current[1] + Math.sin(angle) * length;\n\t\treturn [x, y];\n\t};\n    \n\tlet bezierCommand = (point, i, a) => {\n\t\tlet cps = controlPoint(a[i - 1], a[i - 2], point);\n\t\tlet cpe = controlPoint(point, a[i - 1], a[i + 1], true);\n\t\treturn `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[1]}`;\n\t};\n    \n\tlet pointStr = (points, command) => {\n\t\treturn points.reduce((acc, point, i, a) => i === 0\n\t\t\t? `${point[0]},${point[1]}`\n\t\t\t: `${acc} ${command(point, i, a)}`, '');\n\t};\n    \n\treturn pointStr(points, bezierCommand);\n}\n","import { getBarHeightAndYAttr, truncateString, shortenLargeNumber, getSplineCurvePointsStr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR, PERCENTAGE_BAR_DEFAULT_DEPTH } from './constants';\n\nexport const AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nconst LABEL_MAX_CHARS = 15;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\nconst FONT_FILL = '#555b51';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(className, transform='', parent=undefined) {\n\tlet args = {\n\t\tclassName: className,\n\t\ttransform: transform\n\t};\n\tif(parent) args.inside = parent;\n\treturn createSVG('g', args);\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none', strokeWidth=2) {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill,\n\t\t\t'stroke-width': strokeWidth\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, center.y * 2, center.y + endPosition.y];\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc} z\n\t\tL${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeArcStrokePathStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeStrokeCircleStr(startPosition, endPosition, center, radius, clockWise=1, largeArc=0){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, midArc, arcEndY] = [center.x + endPosition.x, radius * 2 + arcStartY, center.y + startPosition.y];\n\n\treturn `M${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${midArc}\n\t\tM${arcStartX} ${midArc}\n\t\tA ${radius} ${radius} 0 ${largeArc} ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY}`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function percentageBar(x, y, width, height,\n\tdepth=PERCENTAGE_BAR_DEFAULT_DEPTH, fill='none') {\n\n\tlet args = {\n\t\tclassName: 'percentage-bar',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tfill: fill,\n\t\tstyles: {\n\t\t\t// Diabolically good: https://stackoverflow.com/a/9000859\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\n\t\t\t'stroke-dasharray': `0, ${height + width}, ${width}, ${height}`,\n\t\t\t'stroke-width': depth\n\t\t},\n\t};\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function heatSquare(className, x, y, size, radius, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\trx: radius,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function legendBar(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-bar',\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: size,\n\t\theight: '2px',\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE * 2) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"rect\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function legendDot(x, y, size, fill='none', label, truncate=false) {\n\tlabel = truncate ? truncateString(label, LABEL_MAX_CHARS) : label;\n\n\tlet args = {\n\t\tclassName: 'legend-dot',\n\t\tcx: 0,\n\t\tcy: 0,\n\t\tr: size,\n\t\tfill: fill\n\t};\n\tlet text = createSVG('text', {\n\t\tclassName: 'legend-dataset-text',\n\t\tx: 0,\n\t\ty: 0,\n\t\tdx: (FONT_SIZE) + 'px',\n\t\tdy: (FONT_SIZE/3) + 'px',\n\t\t'font-size': (FONT_SIZE * 1.2) + 'px',\n\t\t'text-anchor': 'start',\n\t\tfill: FONT_FILL,\n\t\tinnerHTML: label\n\t});\n\n\tlet group = createSVG('g', {\n\t\ttransform: `translate(${x}, ${y})`\n\t});\n\tgroup.appendChild(createSVG(\"circle\", args));\n\tgroup.appendChild(text);\n\n\treturn group;\n}\n\nexport function makeText(className, x, y, content, options = {}) {\n\tlet fontSize = options.fontSize || FONT_SIZE;\n\tlet dy = options.dy !== undefined ? options.dy : (fontSize / 2);\n\tlet fill = options.fill || FONT_FILL;\n\tlet textAnchor = options.textAnchor || 'start';\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: dy + 'px',\n\t\t'font-size': fontSize + 'px',\n\t\tfill: fill,\n\t\t'text-anchor': textAnchor,\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tif (options.shortenNumbers) label = shortenLargeNumber(label);\n\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType,\n\t\tshortenNumbers: options.shortenNumbers\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label, 5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label, options={}) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tif(!options.labelPos) options.labelPos = 'right';\n\tlet x = options.labelPos === 'left' ? LABEL_MARGIN\n\t\t: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN;\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: x,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tif(height === 0) {\n\t\theight = meta.minHeight;\n\t\ty -= meta.minHeight;\n\t}\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\n\t// Spline\n\tif (options.spline)\n\t\tpointsStr = getSplineCurvePointsStr(xList, yList);\n\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'heat_square': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'heat_square': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n};\n","import { getBarHeightAndYAttr, getSplineCurvePointsStr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine, spline) {\n\tlet pathComponents = [];\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y)).join(\"L\");\n\n\tif (spline)\n\t\tpointsStr = getSplineCurvePointsStr(newXList, newYList);\n\n\tconst animPath = [paths.path, {d:\"M\" + pointsStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pointsStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { $ } from '../utils/dom';\nimport { CSSTEXT } from '../../css/chartsCss';\n\nexport function downloadFile(filename, data) {\n\tvar a = document.createElement('a');\n\ta.style = \"display: none\";\n\tvar blob = new Blob(data, {type: \"image/svg+xml; charset=utf-8\"});\n\tvar url = window.URL.createObjectURL(blob);\n\ta.href = url;\n\ta.download = filename;\n\tdocument.body.appendChild(a);\n\ta.click();\n\tsetTimeout(function(){\n\t\tdocument.body.removeChild(a);\n\t\twindow.URL.revokeObjectURL(url);\n\t}, 300);\n}\n\nexport function prepareForExport(svg) {\n\tlet clone = svg.cloneNode(true);\n\tclone.classList.add('chart-container');\n\tclone.setAttribute('xmlns', \"http://www.w3.org/2000/svg\");\n\tclone.setAttribute('xmlns:xlink', \"http://www.w3.org/1999/xlink\");\n\tlet styleEl = $.create('style', {\n\t\t'innerHTML': CSSTEXT\n\t});\n\tclone.insertBefore(styleEl, clone.firstChild);\n\n\tlet container = $.create('div');\n\tcontainer.appendChild(clone);\n\n\treturn container.innerHTML;\n}\n","// Playing around with dates\n\nimport {MONTH_NAMES} from \"./i18n\";\n\nexport const NO_OF_YEAR_MONTHS = 12;\nexport const NO_OF_DAYS_IN_WEEK = 7;\nexport const DAYS_IN_YEAR = 375;\nexport const NO_OF_MILLIS = 1000;\nexport const SEC_IN_DAY = 86400;\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(date) {\n\tlet result = new Date(date);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getYyyyMmDd(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\tdate.getFullYear(),\n\t\t(mm>9 ? '' : '0') + mm,\n\t\t(dd>9 ? '' : '0') + dd\n\t].join('-');\n}\n\nexport function clone(date) {\n\treturn new Date(date.getTime());\n}\n\nexport function timestampSec(date) {\n\treturn date.getTime()/NO_OF_MILLIS;\n}\n\nexport function timestampToMidnight(timestamp, roundAhead = false) {\n\tlet midnightTs = Math.floor(timestamp - (timestamp % SEC_IN_DAY));\n\tif(roundAhead) {\n\t\treturn midnightTs + SEC_IN_DAY;\n\t}\n\treturn midnightTs;\n}\n\n// export function getMonthsBetween(startDate, endDate) {}\n\nexport function getWeeksBetween(startDate, endDate) {\n\tlet weekStartDate = setDayToSunday(startDate);\n\treturn Math.ceil(getDaysBetween(weekStartDate, endDate) / NO_OF_DAYS_IN_WEEK);\n}\n\nexport function getDaysBetween(startDate, endDate) {\n\tlet millisecondsPerDay = SEC_IN_DAY * NO_OF_MILLIS;\n\treturn (treatAsUtc(endDate) - treatAsUtc(startDate)) / millisecondsPerDay;\n}\n\nexport function areInSameMonth(startDate, endDate) {\n\treturn startDate.getMonth() === endDate.getMonth()\n\t\t&& startDate.getFullYear() === endDate.getFullYear();\n}\n\nexport function getMonthName(i, short= false, lang = \"en\") {\n\tlet monthName = MONTH_NAMES[lang][i];\n\treturn short ? monthName.slice(0, 3) : monthName;\n}\n\nexport function getLastDateInMonth (month, year) {\n\treturn new Date(year, month + 1, 0); // 0: last day in previous month\n}\n\n// mutates\nexport function setDayToSunday(date) {\n\tlet newDate = clone(date);\n\tconst day = newDate.getDay();\n\tif(day !== 0) {\n\t\taddDays(newDate, (-1) * day);\n\t}\n\treturn newDate;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makeText, makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, percentageBar, getPaths, heatSquare } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\nimport { getMonthName } from '../utils/date-utils';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\t\tthis.labels = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(this.layerClass, this.layerTransform, parent);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t\tthis.labels.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data) || [];\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tdonutSlices: {\n\t\tlayerClass: 'donut-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) => {\n\t\t\t\tlet slice = makePath(s, 'donut-path', data.colors[i], 'none', data.strokeWidth);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) => animatePathStr(slice, newData.sliceStrings[i]));\n\t\t},\n\t},\n\tpercentageBars: {\n\t\tlayerClass: 'percentage-bars',\n\t\tmakeElements(data) {\n\t\t\treturn data.xPositions.map((x, i) =>{\n\t\t\t\tlet y = 0;\n\t\t\t\tlet bar = percentageBar(x, y, data.widths[i],\n\t\t\t\t\tthis.constants.barHeight, this.constants.barDepth, data.colors[i]);\n\t\t\t\treturn bar;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos, shortenNumbers: this.constants.shortenNumbers})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(m =>\n\t\t\t\tyMarker(m.position, m.label, this.constants.width,\n\t\t\t\t\t{labelPos: m.options.labelPos, mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(r =>\n\t\t\t\tyRegion(r.startPos, r.endPos, this.constants.width,\n\t\t\t\t\tr.label, {labelPos: r.options.labelPos})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\t\t\tlet newOptions = newData.map(d => d.options);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i],\n\t\t\t\t\toptions: newOptions[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\theatDomain: {\n\t\tlayerClass: function() { return 'heat-domain domain-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet {index, colWidth, rowHeight, squareSize, radius, xTranslate, lang} = this.constants;\n\t\t\tlet monthNameHeight = -12;\n\t\t\tlet x = xTranslate, y = 0;\n\n\t\t\tthis.serializedSubDomains = [];\n\t\t\tdata.cols.map((week, weekNo) => {\n\t\t\t\tif(weekNo === 1) {\n\t\t\t\t\tthis.labels.push(\n\t\t\t\t\t\tmakeText('domain-name', x, monthNameHeight, getMonthName(index, true, lang).toUpperCase(),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontSize: 9\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tweek.map((day, i) => {\n\t\t\t\t\tif(day.fill) {\n\t\t\t\t\t\tlet data = {\n\t\t\t\t\t\t\t'data-date': day.yyyyMmDd,\n\t\t\t\t\t\t\t'data-value': day.dataValue,\n\t\t\t\t\t\t\t'data-day': i\n\t\t\t\t\t\t};\n\t\t\t\t\t\tlet square = heatSquare('day', x, y, squareSize, radius, day.fill, data);\n\t\t\t\t\t\tthis.serializedSubDomains.push(square);\n\t\t\t\t\t}\n\t\t\t\t\ty += rowHeight;\n\t\t\t\t});\n\t\t\t\ty = 0;\n\t\t\t\tx += colWidth;\n\t\t\t});\n\n\t\t\treturn this.serializedSubDomains;\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tif(newData) return [];\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill,\n\t\t\t\t\t\tspline: c.spline\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine, this.constants.spline));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function isInRange(val, min, max) {\n\treturn val > min && val < max;\n}\n\nexport function isInRange2D(coord, minCoord, maxCoord) {\n\treturn isInRange(coord[0], minCoord[0], maxCoord[0])\n\t\t&& isInRange(coord[1], minCoord[1], maxCoord[1]);\n}\n\nexport function getClosestInArray(goal, arr, index = false) {\n\tlet closest = arr.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\n\t}, []);\n\n\treturn index ? arr.indexOf(closest) : closest;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tif(allowedSpace <= 0) allowedSpace = 1;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet seriesMultiple;\n\tif(isSeries) {\n\t\t// Find the maximum label length for spacing calculations\n\t\tlet maxLabelLength = Math.max(...labels.map(label => label.length));\n\t\tseriesMultiple = Math.ceil(maxLabelLength/allowedLetters);\n\t}\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(i % seriesMultiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}\n","import '../css/charts.scss';\n\nimport PercentageChart from './charts/PercentageChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\nimport DonutChart from './charts/DonutChart';\n\nconst chartTypes = {\n\tbar: AxisChart,\n\tline: AxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tdonut: DonutChart,\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nclass Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n\nexport { Chart, PercentageChart, Heatmap, AxisChart };","import { $ } from '../utils/dom';\nimport { TOOLTIP_POINTER_TRIANGLE_HEIGHT } from '../utils/constants';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\t\t\tlet value = set.formatted === 0 || set.formatted ? set.formatted : set.value;\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ value === 0 || value ? value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight\n\t\t\t- TOOLTIP_POINTER_TRIANGLE_HEIGHT;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const CSSTEXT = \".chart-container{position:relative;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Roboto','Oxygen','Ubuntu','Cantarell','Fira Sans','Droid Sans','Helvetica Neue',sans-serif}.chart-container .axis,.chart-container .chart-label{fill:#555b51}.chart-container .axis line,.chart-container .chart-label line{stroke:#dadada}.chart-container .dataset-units circle{stroke:#fff;stroke-width:2}.chart-container .dataset-units path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container .dataset-path{stroke-width:2px}.chart-container .path-group path{fill:none;stroke-opacity:1;stroke-width:2px}.chart-container line.dashed{stroke-dasharray:5,3}.chart-container .axis-line .specific-value{text-anchor:start}.chart-container .axis-line .y-line{text-anchor:end}.chart-container .axis-line .x-line{text-anchor:middle}.chart-container .legend-dataset-text{fill:#6c7680;font-weight:600}.graph-svg-tip{position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.8);border-radius:3px}.graph-svg-tip ul{padding-left:0;display:flex}.graph-svg-tip ol{padding-left:0;display:flex}.graph-svg-tip ul.data-point-list li{min-width:90px;flex:1;font-weight:600}.graph-svg-tip strong{color:#dfe2e5;font-weight:600}.graph-svg-tip .svg-pointer{position:absolute;height:5px;margin:0 0 0 -5px;content:' ';border:5px solid transparent;border-top-color:rgba(0,0,0,.8)}.graph-svg-tip.comparison{padding:0;text-align:left;pointer-events:none}.graph-svg-tip.comparison .title{display:block;padding:10px;margin:0;font-weight:600;line-height:1;pointer-events:none}.graph-svg-tip.comparison ul{margin:0;white-space:nowrap;list-style:none}.graph-svg-tip.comparison li{display:inline-block;padding:5px 10px}\";","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup, makeText } from '../utils/draw';\nimport { BASE_MEASURES, getExtraHeight, getExtraWidth, getTopOffset, getLeftOffset,\n\tINIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT} from '../utils/constants';\nimport { runSMILAnimation } from '../utils/animation';\nimport { downloadFile, prepareForExport } from '../utils/export';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\n\t\tthis.parent = typeof parent === 'string'\n\t\t\t? document.querySelector(parent)\n\t\t\t: parent;\n\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.title = options.title || '';\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\n\t\tthis.colors = options.colors;\n\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: 1, // calculate\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: (typeof options.animate !== 'undefined') ? options.animate : 1,\n\t\t\ttruncateLegends: options.truncateLegends || 1\n\t\t};\n\n\t\tthis.measures = JSON.parse(JSON.stringify(BASE_MEASURES));\n\t\tlet m = this.measures;\n\t\tthis.setMeasures(options);\n\t\tif(!this.title.length) { m.titleHeight = 0; }\n\t\tif(!this.config.showLegend) m.legendHeight = 0;\n\t\tthis.argHeight = options.height || m.baseHeight;\n\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tprepareData(data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data) {\n\t\treturn data;\n\t}\n\n\tsetMeasures() {\n\t\t// Override measures, including those for title and legend\n\t\t// set config for legend and title\n\t}\n\n\tconfigure() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - getExtraHeight(this.measures);\n\n\t\t// Bind window events\n\t\tthis.boundDrawFn = () => this.draw(true);\n\t\twindow.addEventListener('resize', this.boundDrawFn);\n\t\twindow.addEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\tdestroy() {\n\t\twindow.removeEventListener('resize', this.boundDrawFn);\n\t\twindow.removeEventListener('orientationchange', this.boundDrawFn);\n\t}\n\n\t// Has to be called manually\n\tsetup() {\n\t\tthis.makeContainer();\n\t\tthis.updateWidth();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tmakeContainer() {\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\n\t\tlet args = {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'chart-container'\n\t\t};\n\n\t\tif(this.independentWidth) {\n\t\t\targs.styles = { width: this.independentWidth + 'px' };\n\t\t}\n\n\t\tthis.container = $.create('div', args);\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.container,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tthis.updateWidth();\n\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update(this.data);}, this.initTimeout);\n\t\t}\n\n\t\tthis.renderLegend();\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalc() {} // builds state\n\n\tupdateWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - getExtraWidth(this.measures);\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.container.removeChild(this.svg);\n\t\t}\n\t\tlet m = this.measures;\n\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.container,\n\t\t\t'frappe-chart chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\tif(this.title.length) {\n\t\t\tthis.titleEL = makeText(\n\t\t\t\t'title',\n\t\t\t\tm.margins.left,\n\t\t\t\tm.margins.top,\n\t\t\t\tthis.title,\n\t\t\t\t{\n\t\t\t\t\tfontSize: m.titleFontSize,\n\t\t\t\t\tfill: '#666666',\n\t\t\t\t\tdy: m.titleFontSize\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tlet top = getTopOffset(m);\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.type + '-chart chart-draw-area',\n\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t);\n\n\t\tif(this.config.showLegend) {\n\t\t\ttop += this.height + m.paddings.bottom;\n\t\t\tthis.legendArea = makeSVGGroup(\n\t\t\t\t'chart-legend',\n\t\t\t\t`translate(${getLeftOffset(m)}, ${top})`\n\t\t\t);\n\t\t}\n\n\t\tif(this.title.length) { this.svg.appendChild(this.titleEL); }\n\t\tthis.svg.appendChild(this.drawArea);\n\t\tif(this.config.showLegend) { this.svg.appendChild(this.legendArea); }\n\n\t\tthis.updateTipOffset(getLeftOffset(m), getTopOffset(m));\n\t}\n\n\tupdateTipOffset(x, y) {\n\t\tthis.tip.offset = {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tsetupComponents() { this.components = new Map(); }\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render(this.components, this.config.animate);\n\t}\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.container, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t}\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.container)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\texport() {\n\t\tlet chartSvg = prepareForExport(this.svg);\n\t\tdownloadFile(this.title || 'Chart', [chartSvg]);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { truncateString } from '../utils/draw-utils';\nimport { legendDot } from '../utils/draw';\nimport { getExtraWidth } from '../utils/constants';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] >= 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(d[0]);\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\t\tthis.legendArea.textContent = '';\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet count = 0;\n\t\tlet y = 0;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tlet barWidth = 150;\n\t\t\tlet divisor = Math.floor(\n\t\t\t\t(this.width - getExtraWidth(this.measures))/barWidth\n\t\t\t);\n\t\t\tif (this.legendTotals.length < divisor) {\n\t\t\t\tbarWidth = this.width/this.legendTotals.length;\n\t\t\t}\n\t\t\tif(count > divisor) {\n\t\t\t\tcount = 0;\n\t\t\t\ty += 20;\n\t\t\t}\n\t\t\tlet x = barWidth * count + 5;\n\t\t\tlet label = this.config.truncateLegends ? truncateString(s.labels[i], barWidth/10) : s.labels[i];\n\t\t\tlet dot = legendDot(\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t5,\n\t\t\t\tthis.colors[i],\n\t\t\t\t`${label}: ${d}`,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tthis.legendArea.appendChild(dot);\n\t\t\tcount++;\n\t\t});\n\t}\n}\n","export const MONTH_NAMES = {\n\t\"fr\": [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n\t\"en\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n};\n\nexport const MONTH_NAMES_SHORT =  {\n\t\"fr\": [\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Jui\", \"Jui\", \"Aoû\", \"Sep\", \"Oct\", \"Nov\", \"Déc\"],\n\t\"en\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n};\n\nexport const DAY_NAMES_SHORT =  {\n\t\"fr\": [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n\t\"en\": [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n};\n\nexport const DAY_NAMES =  {\n\t\"fr\": [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n\t\"en\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n};\n\nexport const LESS =  {\n\t\"fr\": [\"Moins\"],\n\t\"en\": [\"Less\"],\n};\n\nexport const MORE =  {\n\t\"fr\": [\"Plus\"],\n\t\"en\": [\"More\"],\n};\n\nexport const heatmapTooltip = (lang, day, month, year) => {\n\tif (lang === 'fr') {\n\t\treturn ' le ' + day + ' ' + month + ' ' + year;\n\t}\n\treturn ' on ' + month + ' ' + day + ', ' + year;\n};","import AggregationChart from './AggregationChart';\nimport { getOffset } from '../utils/dom';\nimport { getComponent } from '../objects/ChartComponents';\nimport { PERCENTAGE_BAR_DEFAULT_HEIGHT, PERCENTAGE_BAR_DEFAULT_DEPTH } from '../utils/constants';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\t\tthis.setup();\n\t}\n\n\tsetMeasures(options) {\n\t\tlet m = this.measures;\n\t\tthis.barOptions = options.barOptions || {};\n\n\t\tlet b = this.barOptions;\n\t\tb.height = b.height || PERCENTAGE_BAR_DEFAULT_HEIGHT;\n\t\tb.depth = b.depth || PERCENTAGE_BAR_DEFAULT_DEPTH;\n\n\t\tm.paddings.right = 30;\n\t\tm.legendHeight = 60;\n\t\tm.baseHeight = (b.height + b.depth * 0.5) * 8;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'percentageBars',\n\t\t\t\t{\n\t\t\t\t\tbarHeight: this.barOptions.height,\n\t\t\t\t\tbarDepth: this.barOptions.depth,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xPositions,\n\t\t\t\t\t\twidths: s.widths,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\ts.xPositions = [];\n\t\ts.widths = [];\n\n\t\tlet xPos = 0;\n\t\ts.sliceTotals.map((value) => {\n\t\t\tlet width = this.width * value / s.grandTotal;\n\t\t\ts.widths.push(width);\n\t\t\ts.xPositions.push(xPos);\n\t\t\txPos += width;\n\t\t});\n\t}\n\n\tmakeDataByIndex() { }\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet bars = this.components.get('percentageBars').store;\n\t\t\tlet bar = e.target;\n\t\t\tif(bars.includes(bar)) {\n\n\t\t\t\tlet i = bars.indexOf(bar);\n\t\t\t\tlet gOff = getOffset(this.container), pOff = getOffset(bar);\n\n\t\t\t\tlet x = pOff.left - gOff.left + parseInt(bar.getAttribute('width'))/2;\n\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet fraction = s.sliceTotals[i]/s.grandTotal;\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: (fraction*100).toFixed(1) + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { makeText, heatSquare } from '../utils/draw';\nimport { addDays, areInSameMonth, getLastDateInMonth, setDayToSunday, getYyyyMmDd, getWeeksBetween, getMonthName, clone,\n\tNO_OF_MILLIS, NO_OF_YEAR_MONTHS, NO_OF_DAYS_IN_WEEK } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { getExtraHeight, getExtraWidth, HEATMAP_DISTRIBUTION_SIZE, HEATMAP_SQUARE_SIZE,\n\tHEATMAP_GUTTER_SIZE } from '../utils/constants';\nimport {DAY_NAMES_SHORT, heatmapTooltip, LESS, MORE} from \"../utils/i18n\";\nimport {getElementContentWidth} from \"../utils/dom\";\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\t\tthis.type = 'heatmap';\n\t\tthis.lang = options.lang;\n\t\tthis.countLabel = options.countLabel || '';\n\t\tthis.startSubDomainIndex = options.isMondayFirst ? 1 : 0;\n\t\tthis.setup();\n\t}\n\n\tsetBoxSizes() {\n\t\tconst parentWidth = getElementContentWidth(this.parent);\n\t\tthis.squareSize = parentWidth > 1000 ? 13 : HEATMAP_SQUARE_SIZE;\n\n\t\tthis.colWidth = this.squareSize + HEATMAP_GUTTER_SIZE;\n\t\tthis.rowHeight = this.colWidth;\n\t}\n\n\tsetMeasures(options) {\n\t\tthis.setBoxSizes();\n\t\tlet m = this.measures;\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\n\t\tm.paddings.top = this.rowHeight * 3;\n\t\tm.paddings.bottom = 0;\n\t\tm.legendHeight = this.rowHeight * 2;\n\t\tm.baseHeight = this.rowHeight * NO_OF_DAYS_IN_WEEK\n\t\t\t+ getExtraHeight(m);\n\n\t\tlet d = this.data;\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tthis.independentWidth = (getWeeksBetween(d.start, d.end)\n\t\t\t+ spacing) * this.colWidth + getExtraWidth(m);\n\t}\n\n\tupdateWidth() {\n\t\tthis.setBoxSizes();\n\t\tlet spacing = this.discreteDomains ? NO_OF_YEAR_MONTHS : 0;\n\t\tlet noOfWeeks = this.state.noOfWeeks ? this.state.noOfWeeks : 52;\n\t\tthis.baseWidth = (noOfWeeks + spacing) * this.colWidth\n\t\t\t+ getExtraWidth(this.measures);\n\t}\n\n\tprepareData(data=this.data) {\n\t\tif(data.start && data.end && data.start > data.end) {\n\t\t\tthrow new Error('Start date cannot be greater than end date.');\n\t\t}\n\n\t\tif(!data.start) {\n\t\t\tdata.start = new Date();\n\t\t\tdata.start.setFullYear( data.start.getFullYear() - 1 );\n\t\t}\n\t\tif(!data.end) { data.end = new Date(); }\n\t\tdata.dataPoints = data.dataPoints || {};\n\n\t\tif(parseInt(Object.keys(data.dataPoints)[0]) > 100000) {\n\t\t\tlet points = {};\n\t\t\tObject.keys(data.dataPoints).forEach(timestampSec => {\n\t\t\t\tlet date = new Date(timestampSec * NO_OF_MILLIS);\n\t\t\t\tpoints[getYyyyMmDd(date)] = data.dataPoints[timestampSec];\n\t\t\t});\n\t\t\tdata.dataPoints = points;\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\n\t\ts.start = clone(this.data.start);\n\t\ts.end = clone(this.data.end);\n\n\t\ts.firstWeekStart = clone(s.start);\n\t\ts.noOfWeeks = getWeeksBetween(s.start, s.end);\n\t\ts.distribution = calcDistribution(\n\t\t\tObject.values(this.data.dataPoints), HEATMAP_DISTRIBUTION_SIZE);\n\n\t\ts.domainConfigs = this.getDomains();\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\t\tlet lessCol = this.discreteDomains ? 0 : 1;\n\n\t\tlet componentConfigs = s.domainConfigs.map((config, i) => [\n\t\t\t'heatDomain',\n\t\t\t{\n\t\t\t\tindex: config.index,\n\t\t\t\tlang: this.lang,\n\t\t\t\tcolWidth: this.colWidth,\n\t\t\t\trowHeight: this.rowHeight,\n\t\t\t\tsquareSize: this.squareSize,\n\t\t\t\tradius: this.rawChartArgs.radius || 0,\n\t\t\t\txTranslate: s.domainConfigs\n\t\t\t\t\t.filter((config, j) => j < i)\n\t\t\t\t\t.map(config => config.cols.length - lessCol)\n\t\t\t\t\t.reduce((a, b) => a + b, 0)\n\t\t\t\t\t* this.colWidth\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\treturn s.domainConfigs[i];\n\t\t\t}.bind(this)\n\n\t\t]);\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map((args, i) => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0] + '-' + i, component];\n\t\t\t})\n\t\t);\n\n\t\tlet y = 0;\n\t\tDAY_NAMES_SHORT[this.lang].forEach((dayName, i) => {\n\t\t\tif([1, 3, 5].includes(i)) {\n\t\t\t\tlet dayText = makeText('subdomain-name', -this.colWidth/2, y, dayName,\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE,\n\t\t\t\t\t\tdy: 8,\n\t\t\t\t\t\ttextAnchor: 'end'\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.drawArea.appendChild(dayText);\n\t\t\t}\n\t\t\ty += this.rowHeight;\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tif(!data) {\n\t\t\tconsole.error('No data to update.');\n\t\t}\n\n\t\tthis.data = this.prepareData(data);\n\t\tthis.draw();\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tthis.components.forEach(comp => {\n\t\t\t\tlet daySquares = comp.store;\n\t\t\t\tlet daySquare = e.target;\n\t\t\t\tif(daySquares.includes(daySquare)) {\n\n\t\t\t\t\tlet count = daySquare.getAttribute('data-value');\n\t\t\t\t\tlet dateParts = daySquare.getAttribute('data-date').split('-');\n\n\t\t\t\t\tlet month = getMonthName(parseInt(dateParts[1])-1, true, this.lang);\n\n\t\t\t\t\tlet gOff = this.container.getBoundingClientRect(), pOff = daySquare.getBoundingClientRect();\n\n\t\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\t\tlet x = pOff.left - gOff.left + width/2;\n\t\t\t\t\tlet y = pOff.top - gOff.top;\n\t\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\t\tlet name = heatmapTooltip(this.lang, dateParts[2], month, dateParts[0]);\n\n\t\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\t\tthis.tip.showTip();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tthis.legendArea.textContent = '';\n\t\tlet x = 0;\n\t\tlet y = this.rowHeight;\n\t\tlet radius = this.rawChartArgs.radius || 0;\n\n\t\tlet lessText = makeText('subdomain-name', x, y, LESS[this.lang],\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tx = (HEATMAP_SQUARE_SIZE * 3) + HEATMAP_SQUARE_SIZE/2;\n\t\tthis.legendArea.appendChild(lessText);\n\n\t\tthis.colors.slice(0, HEATMAP_DISTRIBUTION_SIZE).map((color, i) => {\n\t\t\tconst square = heatSquare('heatmap-legend-unit', x + (HEATMAP_SQUARE_SIZE + 3) * i,\n\t\t\t\ty, HEATMAP_SQUARE_SIZE, radius, color);\n\t\t\tthis.legendArea.appendChild(square);\n\t\t});\n\n\t\tlet moreTextX = x + HEATMAP_DISTRIBUTION_SIZE * (HEATMAP_SQUARE_SIZE + 3) + HEATMAP_SQUARE_SIZE/4;\n\t\tlet moreText = makeText('subdomain-name', moreTextX, y, MORE[this.lang],\n\t\t\t{\n\t\t\t\tfontSize: HEATMAP_SQUARE_SIZE + 1,\n\t\t\t\tdy: 9\n\t\t\t}\n\t\t);\n\t\tthis.legendArea.appendChild(moreText);\n\t}\n\n\tgetDomains() {\n\t\tlet s = this.state;\n\t\tconst [startMonth, startYear] = [s.start.getMonth(), s.start.getFullYear()];\n\t\tconst [endMonth, endYear] = [s.end.getMonth(), s.end.getFullYear()];\n\n\t\tconst noOfMonths = (endMonth - startMonth + 1) + (endYear - startYear) * 12;\n\n\t\tlet domainConfigs = [];\n\n\t\tlet startOfMonth = clone(s.start);\n\t\tfor(var i = 0; i < noOfMonths; i++) {\n\t\t\tlet endDate = s.end;\n\t\t\tif(!areInSameMonth(startOfMonth, s.end)) {\n\t\t\t\tlet [month, year] = [startOfMonth.getMonth(), startOfMonth.getFullYear()];\n\t\t\t\tendDate = getLastDateInMonth(month, year);\n\t\t\t}\n\t\t\tdomainConfigs.push(this.getDomainConfig(startOfMonth, endDate));\n\n\t\t\taddDays(endDate, 1);\n\t\t\tstartOfMonth = endDate;\n\t\t}\n\n\t\treturn domainConfigs;\n\t}\n\n\tgetDomainConfig(startDate, endDate='') {\n\t\tlet [month, year] = [startDate.getMonth(), startDate.getFullYear()];\n\t\tlet startOfWeek = setDayToSunday(startDate); // TODO: Monday as well\n\t\tendDate = clone(endDate) || getLastDateInMonth(month, year);\n\n\t\tlet domainConfig = {\n\t\t\tindex: month,\n\t\t\tcols: []\n\t\t};\n\n\t\taddDays(endDate, 1);\n\t\tlet noOfMonthWeeks = getWeeksBetween(startOfWeek, endDate);\n\n\t\tlet cols = [], col;\n\t\tfor(var i = 0; i < noOfMonthWeeks; i++) {\n\t\t\tcol = this.getCol(startOfWeek, month);\n\t\t\tcols.push(col);\n\n\t\t\tstartOfWeek = new Date(col[NO_OF_DAYS_IN_WEEK - 1].yyyyMmDd);\n\t\t\taddDays(startOfWeek, 1);\n\t\t}\n\n\t\tif(col[NO_OF_DAYS_IN_WEEK - 1].dataValue !== undefined) {\n\t\t\taddDays(startOfWeek, 1);\n\t\t\tcols.push(this.getCol(startOfWeek, month, true));\n\t\t}\n\n\t\tdomainConfig.cols = cols;\n\n\t\treturn domainConfig;\n\t}\n\n\tgetCol(startDate, month, empty = false) {\n\t\tlet s = this.state;\n\n\t\t// startDate is the start of week\n\t\tlet currentDate = clone(startDate);\n\t\tlet col = [];\n\n\t\tfor(var i = 0; i < NO_OF_DAYS_IN_WEEK; i++, addDays(currentDate, 1)) {\n\t\t\tlet config = {};\n\n\t\t\t// Non-generic adjustment for entire heatmap, needs state\n\t\t\tlet currentDateWithinData = currentDate >= s.start && currentDate <= s.end;\n\n\t\t\tif(empty || currentDate.getMonth() !== month || !currentDateWithinData) {\n\t\t\t\tconfig.yyyyMmDd = getYyyyMmDd(currentDate);\n\t\t\t} else {\n\t\t\t\tconfig = this.getSubDomainConfig(currentDate);\n\t\t\t}\n\t\t\tcol.push(config);\n\t\t}\n\n\t\treturn col;\n\t}\n\n\tgetSubDomainConfig(date) {\n\t\tlet yyyyMmDd = getYyyyMmDd(date);\n\t\tlet dataValue = this.data.dataPoints[yyyyMmDd];\n\t\tlet config = {\n\t\t\tyyyyMmDd: yyyyMmDd,\n\t\t\tdataValue: dataValue || 0,\n\t\t\tfill: this.colors[getMaxCheckpoint(dataValue, this.state.distribution)]\n\t\t};\n\t\treturn config;\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { AXIS_LEGEND_BAR_SIZE } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale, getClosestInArray } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay, legendBar } from '../utils/draw';\nimport { getTopOffset, getLeftOffset, MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO,\n\tLINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\t\tthis.linkedChart = null;\n\n\t\tthis.setup();\n\t}\n\n\tsetLinkedChart(chart) {\n\t\tthis.linkedChart = chart;\n\t}\n\n\tsetMeasures() {\n\t\tif(this.data.datasets.length <= 1) {\n\t\t\tthis.config.showLegend = 0;\n\t\t\tthis.measures.paddings.bottom = 30;\n\t\t}\n\t}\n\n\tconfigure(options) {\n\t\tsuper.configure(options);\n\n\t\toptions.axisOptions = options.axisOptions || {};\n\t\toptions.tooltipOptions = options.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = options.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = options.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = options.axisOptions.xIsSeries || 0;\n\t\tthis.config.shortenYAxisNumbers = options.axisOptions.shortenYAxisNumbers || 0;\n\n\t\tthis.config.formatTooltipX = options.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = options.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = options.valuesOverPoints;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t\t}\n\t\tthis.makeDataByIndex();\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\tif(!d.options) d.options = {};\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tshortenNumbers: this.config.shortenYAxisNumbers\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\tspline: this.lineOptions.spline,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet minLine = s.yAxis.positions[0] < s.yAxis.zeroLine\n\t\t\t\t\t\t? s.yAxis.positions[0] : s.yAxis.zeroLine;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: minLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tmakeDataByIndex() {\n\t\tthis.dataByIndex = {};\n\n\t\tlet s = this.state;\n\t\tlet formatX = this.config.formatTooltipX;\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet titles = s.xAxis.labels;\n\n\t\ttitles.map((label, index) => {\n\t\t\tlet values = this.state.datasets.map((set, i) => {\n\t\t\t\tlet value = set.values[index];\n\t\t\t\treturn {\n\t\t\t\t\ttitle: set.name,\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tyPos: set.yPositions[index],\n\t\t\t\t\tcolor: this.colors[i],\n\t\t\t\t\tformatted: formatY ? formatY(value) : value,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tthis.dataByIndex[index] = {\n\t\t\t\tlabel: label,\n\t\t\t\tformattedLabel: formatX ? formatX(label) : label,\n\t\t\t\txPos: s.xAxis.positions[index],\n\t\t\t\tvalues: values,\n\t\t\t\tyExtreme: s.yExtremes[index],\n\t\t\t};\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.container.addEventListener('mousemove', (e) => {\n\t\t\tlet m = this.measures;\n\t\t\tlet o = getOffset(this.container);\n\t\t\tlet relX = e.pageX - o.left - getLeftOffset(m);\n\t\t\tlet relY = e.pageY - o.top;\n\n\t\t\tif(relY < this.height + getTopOffset(m)\n\t\t\t\t&& relY >  getTopOffset(m)) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t});\n\t}\n\n\thideTooltip() {\n\t\tthis.tip.hideTip();\n\t\tif (this.linkedChart && this.linkedChart.tip) {\n\t\t\tthis.linkedChart.tip.hideTip();\n\t\t}\n\t}\n\n\tshowTooltip(index) {\n\t\tlet dbi = this.dataByIndex[index];\n\n\t\tthis.tip.setValues(\n\t\t\tdbi.xPos + this.tip.offset.x,\n\t\t\tdbi.yExtreme + this.tip.offset.y,\n\t\t\t{name: dbi.formattedLabel, value: ''},\n\t\t\tdbi.values,\n\t\t\tindex\n\t\t);\n\t\tthis.tip.showTip();\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet index = getClosestInArray(relX, s.xAxis.positions, true);\n\t\tif (index >= 0) {\n\t\t\tthis.showTooltip(index);\n\t\t\tif (this.linkedChart) {\n\t\t\t\tthis.linkedChart.showTooltip(index);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tif(s.datasets.length > 1) {\n\t\t\tthis.legendArea.textContent = '';\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet barWidth = AXIS_LEGEND_BAR_SIZE;\n\t\t\t\t// let rightEndPoint = this.baseWidth - this.measures.margins.left - this.measures.margins.right;\n\t\t\t\t// let multiplier = s.datasets.length - i;\n\t\t\t\tlet rect = legendBar(\n\t\t\t\t\t// rightEndPoint - multiplier * barWidth,\t// To right align\n\t\t\t\t\tbarWidth * i,\n\t\t\t\t\t'0',\n\t\t\t\t\tbarWidth,\n\t\t\t\t\tthis.colors[i],\n\t\t\t\t\td.name,\n\t\t\t\t\tthis.config.truncateLegends);\n\t\t\t\tthis.legendArea.appendChild(rect);\n\t\t\t});\n\t\t}\n\t}\n\n\n\n\t// Overlay\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcStrokePathStr, makeStrokeCircleStr } from '../utils/draw';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class DonutChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'donut';\n\t\tthis.initTimeout = 0;\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.strokeWidth = args.strokeWidth || 30;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\t\tthis.radius =\n\t\t\tthis.height > this.width\n\t\t\t\t? this.center.x - this.strokeWidth / 2\n\t\t\t\t: this.center.y - this.strokeWidth / 2;\n\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst largeArc = originDiffAngle > 180 ? 1: 0;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath =\n\t\t\t\toriginDiffAngle === 360\n\t\t\t\t\t? makeStrokeCircleStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc)\n\t\t\t\t\t: makeArcStrokePathStr(curStart, curEnd, this.center, this.radius, this.clockWise, largeArc);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'donutSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors,\n\t\t\t\t\t\tstrokeWidth: this.strokeWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{ radius, hoverRadio } = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.stroke = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.container.addEventListener('mousemove', this.mouseMove);\n\t\tthis.container.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('donutSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","$","expr","con","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","getTopOffset","m","titleHeight","margins","paddings","getLeftOffset","getExtraHeight","legendHeight","getExtraWidth","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","truncateString","txt","len","slice","shortenLargeNumber","label","number","Number","isNaN","p","floor","log10","l","shortened","pow","round","getSplineCurvePointsStr","xList","yList","points","i","push","line","pointA","pointB","lengthX","lengthY","sqrt","atan2","controlPoint","current","previous","next","reverse","o","PI","command","reduce","acc","point","a","cps","cpe","createSVG","tag","createElementNS","val","parentNode","keys","map","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","transform","undefined","args","inside","makePath","pathStr","makeArcStrokePathStr","startPosition","endPosition","center","clockWise","largeArc","arcStartX","x","arcStartY","arcEndX","arcEndY","makeStrokeCircleStr","midArc","makeGradient","lighter","gradientDef","opacities","percentageBar","depth","PERCENTAGE_BAR_DEFAULT_DEPTH","heatSquare","size","data","key","legendBar","LABEL_MAX_CHARS","text","FONT_SIZE","FONT_FILL","group","legendDot","makeText","content","options","fontSize","dy","textAnchor","makeVertLine","y1","y2","stroke","BASE_LINE_COLOR","LABEL_MARGIN","makeHoriLine","x1","x2","lineType","shortenNumbers","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelPos","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","datasetDot","dot","getPaths","pointsStr","join","spline","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","translate","unit","oldCoord","newCoord","duration","old","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","downloadFile","filename","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","prepareForExport","svg","clone","classList","add","styleEl","create","CSSTEXT","container","innerHTML","treatAsUtc","date","result","Date","setMinutes","getMinutes","getTimezoneOffset","getYyyyMmDd","dd","getDate","mm","getMonth","getFullYear","getTime","getWeeksBetween","startDate","endDate","weekStartDate","setDayToSunday","ceil","getDaysBetween","NO_OF_DAYS_IN_WEEK","millisecondsPerDay","SEC_IN_DAY","NO_OF_MILLIS","areInSameMonth","getMonthName","short","lang","monthName","MONTH_NAMES","getLastDateInMonth","month","year","newDate","day","getDay","addDays","numberOfDays","setDate","getComponent","name","constants","getData","Object","componentConfigs","filter","includes","k","config","assign","ChartComponent","normalize","mantissa","exponent","sig","isFinite","exp","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","getClosestInArray","goal","arr","closest","prev","curr","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedSpace","allowedLetters","DEFAULT_CHAR_WIDTH","seriesMultiple","maxLabelLength","getChartByType","AxisChart","chartTypes","BASE_MEASURES","INIT_CHART_UPDATE_TIMEOUT","CHART_POST_ANIMATE_TIMEOUT","DEFAULT_AXIS_CHART_TYPE","AXIS_LEGEND_BAR_SIZE","BAR_CHART_SPACE_RATIO","MIN_BAR_PERCENT_HEIGHT","LINE_CHART_DOT_SIZE","DOT_OVERLAY_SIZE_INCR","PERCENTAGE_BAR_DEFAULT_HEIGHT","HEATMAP_DISTRIBUTION_SIZE","HEATMAP_SQUARE_SIZE","HEATMAP_GUTTER_SIZE","TOOLTIP_POINTER_TRIANGLE_HEIGHT","FULL_ANGLE","SvgTip","colors","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","this","hideTip","title","dataPointList","addEventListener","set","_this2","formatted","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","makeOverlay","transformValue","overlay","parseInt","updateOverlay","attributes","attr","specified","nodeValue","BaseChart","HTMLElement","Error","rawChartArgs","prepareData","prepareFirstData","isNavigable","animate","truncateLegends","measures","JSON","parse","stringify","setMeasures","showLegend","argHeight","baseHeight","state","initTimeout","overlays","configure","boundDrawFn","_this","draw","removeEventListener","makeContainer","updateWidth","independentWidth","tip","bindTooltip","onlyWidthChange","init","calc","makeChartArea","setupComponents","components","forEach","c","drawArea","render","update","renderLegend","setupNavigation","baseWidth","titleEL","titleFontSize","legendArea","updateTipOffset","Map","error","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","chartSvg","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","b","sumOfRemaining","grandTotal","textContent","legendTotals","barWidth","divisor","_this3","DAY_NAMES_SHORT","LESS","MORE","heatmapTooltip","NO_OF_YEAR_MONTHS","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","strokeWidth","transition","newData","xPositions","widths","barHeight","barDepth","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","_this5","newOptions","r","startPos","endPos","_this6","newStarts","oldStarts","colWidth","rowHeight","squareSize","xTranslate","serializedSubDomains","cols","week","weekNo","toUpperCase","yyyyMmDd","dataValue","square","unitType","units","yPositions","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PercentageChart","barOptions","component","xPos","bars","get","gOff","pOff","formattedLabels","fraction","setValues","showTip","Heatmap","countLabel","startSubDomainIndex","isMondayFirst","parentWidth","setBoxSizes","discreteDomains","spacing","noOfWeeks","setFullYear","dataPoints","timestampSec","firstWeekStart","domainConfigs","getDomains","lessCol","dayName","dayText","daySquares","comp","daySquare","dateParts","lessText","moreText","startMonth","startYear","noOfMonths","startOfMonth","getDomainConfig","startOfWeek","domainConfig","noOfMonthWeeks","col","getCol","empty","currentDate","currentDateWithinData","getSubDomainConfig","lineOptions","linkedChart","chart","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","shortenYAxisNumbers","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","makeDataByIndex","unitWidth","xOffset","xAxis","dataValues","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","lineConfigs","minLine","dotSize","markerConfigs","optionals","dataUnitComponents","dataByIndex","formatX","formatY","relX","pageX","relY","pageY","mapTooltipXPosition","hideTooltip","dbi","yExtreme","formattedLabel","showTooltip","overlayGuides","g","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice","DonutChart","mouseMove","mouseLeave","hoverRadio","startAngle","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","property","flag","calTranslateByAngle","g_off","formatted_labels","percent","slices","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Chart"],"mappings":"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"}